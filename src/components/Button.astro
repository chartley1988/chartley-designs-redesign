---
interface Props {
	colour: "primary" | "accent" | "none";
	hideBackground?: true | false;
	hideBorder?: true | false;
}

const { colour, hideBackground = false, hideBorder = false } = Astro.props;
---

<div class:list={[`btn ${colour}`, {hideBackground}, {hideBorder}]}>
	<slot />
</div>

<style>
	.btn {
		display: flex;
		justify-content: center;
		align-items: center;
		padding: 0.25rem 1rem;
		width: max-content;
		height: 44px;
		border-radius: var(--button-radius);
		border: solid var(--button-border);
		transition-duration: 0.3s;
		color: var(--ui-text-high-contrast);
	}
	

	.btn:hover {
		transition-duration: 0.3s;
	}

	.none {
		border-color: var(--ui-border);
		background-color: var(--ui-element-bg);
	}

	.none:hover {
		background-color: var(--ui-element-bg-hovered);
		box-shadow:
			var(--ui-border-hovered) 0px var(--button-border)
				var(--button-border) inset,
			var(--ui-border-hovered) 0px 0px 0px var(--button-border) inset;
	}

	.primary {
		background-color: var(--primary-3);
		border-color: var(--primary-7);
	}

	.primary:hover {
		background-color: var(--primary-4);
		box-shadow:
			var(--primary-8) 0px var(--button-border) var(--button-border) inset,
			var(--primary-8) 0px 0px 0px var(--button-border) inset;
	}

	.accent {
		background-color: var(--accent-3);
		border-color: var(--accent-7);
	}

	.accent:hover {
		background-color: var(--accent-4);
		box-shadow:
			var(--accent-8) 0px var(--button-border) var(--button-border) inset,
			var(--accent-8) 0px 0px 0px var(--button-border) inset;
	}

	.hideBackground {
		background: none;
	}

	.hideBackground:hover, .hideBackground:focus {
		background: none;
	}

	.hideBorder {
		border: none;
	}

	.hideBorder:hover, .hideBackground:focus {
		border: none;
		box-shadow: none;
	}
</style>
