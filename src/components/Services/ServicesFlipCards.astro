---
import { Image, type LocalImageProps } from "astro:assets";
import Card from "../Cards/Card.astro";
import FlipCard from "../Cards/FlipCard/FlipCard.astro";
import fence from "../../assets/images/fence.webp";
import deck from "../../assets/images/hero.webp";
import patio from "../../assets/images/patio.webp";
import pergola from "../../assets/images/pergola.webp";
import type { ImageMetadata } from "astro";

import { getCollection, getEntry } from 'astro:content';
const content = await getCollection('services');

interface Props {
	cardSize?: {
		width: string | "none";
		height: string | "none";
	};
}

const { cardSize = { width: "200px", height: "250px" } } = Astro.props;
---

<div class='container feature-grid'>
	{
		content.map((item) => {
			return (
				<FlipCard
					cardSize={cardSize}
					borderWidth={"0px"}
					borderRadius="0"
					hoverFlip={true}
				>
					<div
						class='card-grid'
						slot='front'
					>
						<div class='content'>
							<h2>{item.data.title}</h2>
							<p>{item.data.description}</p>
						</div>
					</div>
					<div slot='back'>
						{item.data.picture && (
							<Image
								src={item.data.picture}
								alt={item.data.description}
								width={Number(cardSize.width)}
								height={Number(cardSize.height)}
							/>
						)}
					</div>
				</FlipCard>
			);
		})
	}
</div>

<style define:vars={{ width: cardSize.width, height: cardSize.height }}>
	.feature-grid {
		margin-top: 5vh;
		justify-items: center;

		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(var(--width), 1fr));
		grid-template-rows: var(--height);
		grid-auto-flow: row;
		grid-auto-rows: var(--height);
		gap: 2rem;
	}

	.card-grid {
		display: grid;
		grid-template-rows: auto auto;
		grid-template-columns: 1fr;
		height: 100%;
	}

	.card-grid > * {
		grid-column: 1/2;
	}

	.content {
		grid-row: 1/2;
		padding: 1rem;
		transition-duration: 0.3s;
		z-index: 2;

		height: 100%;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		justify-content: start;
	}

	img {
		width: 100%;
		height: var(--height);
		object-fit: cover;
		align-self: stretch;
		grid-row: 1/3;
		transition-duration: 0.3s;
	}

	h2 {
		color: var(--primary);
		margin: 0;
	}
</style>
